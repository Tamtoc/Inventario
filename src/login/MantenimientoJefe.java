/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login;

import java.sql.Connection;
import connectionSQL.connectionMySQL;
import java.awt.event.ItemEvent;
import java.math.BigInteger;
import java.security.SecureRandom;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author georg
 */
public class MantenimientoJefe extends javax.swing.JFrame {
    
    private int id;
    public static String departamento = "";
    public static String id_depto = "";
    private int cantidadTecnicos;
    connectionMySQL cmsql = new connectionMySQL();
    Connection connection = (Connection)cmsql.connection();
    /**
     * Creates new form Mantenimiento
     */
    public MantenimientoJefe(String departamento, String id_depto) {
        initComponents();
        
        cantidadTecnicos = nTecnicos();
        
        this.departamento = departamento;
        this.id_depto = id_depto;
        
        Computadoras pcs = new Computadoras();
        DefaultComboBoxModel modelComputadoras = new DefaultComboBoxModel(pcs.mostrarComputadoras(id_depto));
        cbxComputadoras.setModel(modelComputadoras);
        
        this.setLocationRelativeTo(null);
    }
    
    public int getCantidadTecnicos() {
        return cantidadTecnicos;
    }
    
    private int nTecnicos() {
        int contador = 0;
        try {
            PreparedStatement ps = null;
            ResultSet rs = null;
            connectionMySQL conn = new connectionMySQL();
            Connection con = (Connection) conn.connection();
            
            String sql = "SELECT * from tecnico";
            
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            contador = 0;
            while (rs.next()) {
                contador++;
            }
            rs.first();
            
            
        } catch(SQLException e) {
            System.out.println(e.toString());
        }
        return contador;
    }
    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbxComputadoras = new javax.swing.JComboBox<>();
        btnSiguiente = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtEquipoMant = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnCargar = new javax.swing.JButton();
        txtBusqueda = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(108, 122, 137));
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 600));

        jLabel1.setFont(new java.awt.Font("Yu Gothic Light", 0, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MANTENIMIENTO");

        jLabel3.setFont(new java.awt.Font("Yu Gothic Light", 0, 18)); // NOI18N
        jLabel3.setText("Computadora:");

        cbxComputadoras.setFont(new java.awt.Font("Decker", 0, 14)); // NOI18N
        cbxComputadoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxComputadorasActionPerformed(evt);
            }
        });

        btnSiguiente.setFont(new java.awt.Font("Yu Gothic Light", 0, 14)); // NOI18N
        btnSiguiente.setText("Siguiente");
        btnSiguiente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSiguienteMouseClicked(evt);
            }
        });
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(cbxComputadoras, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSiguiente)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxComputadoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(btnSiguiente)
                .addContainerGap(328, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel2.setBackground(new java.awt.Color(46, 49, 49));
        jPanel2.setPreferredSize(new java.awt.Dimension(700, 600));

        jtEquipoMant.setBackground(new java.awt.Color(46, 49, 49));
        jtEquipoMant.setForeground(new java.awt.Color(255, 255, 255));
        jtEquipoMant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Número de Inventario", "Departamento", "ID Reporte", "ID Técnico"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtEquipoMant.setSelectionForeground(new java.awt.Color(46, 49, 49));
        jScrollPane1.setViewportView(jtEquipoMant);

        jLabel4.setFont(new java.awt.Font("Yu Gothic Light", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Equipo en mantenimiento:");

        btnCargar.setText("Cargar");
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Yu Gothic Light", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("n. inventario");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_delete_file_24px.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(btnCargar)))
                        .addGap(38, 38, 38))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnCargar)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 0, 720, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        // TODO add your handling code here:
        String campo = txtBusqueda.getText();
        String where = "";
        
        if(!"".equals(campo)) {
            where = "WHERE Mantenimiento.id like id_mantenimiento AND n_computadora ='" + campo + "' AND depto_computadora=Departamento.id AND Departamento.id='"+this.id_depto+"' ";
        } else {
            where = "WHERE Mantenimiento.id like id_mantenimiento AND depto_computadora=Departamento.id AND Departamento.id='"+this.id_depto+"' ";
        }
        
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            jtEquipoMant.setModel(modelo);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
            connectionMySQL conn = new connectionMySQL();
            Connection con = (Connection) conn.connection();
            
            String sql = "SELECT n_computadora, nombre, id_reparacion, id_tecnico FROM Mantenimiento, EnReparacion, Departamento " + where;
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            
            modelo.addColumn("Número de Inventario");
            modelo.addColumn("Departamento");
            modelo.addColumn("ID Reporte");  
            modelo.addColumn("ID Técnico");
            
            while(rs.next()) {
                Object[] filas = new Object[cantidadColumnas];
                
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                
                modelo.addRow(filas);
            }
            
        } catch(SQLException e) {
            System.out.println(e.toString());
        }
        
    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnSiguienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSiguienteMouseClicked

        int computadora = Integer.parseInt(cbxComputadoras.getSelectedItem().toString());
        
        int dialog = JOptionPane.YES_NO_OPTION;
        int result = JOptionPane.showConfirmDialog(null, "¿Desea agregar el equipo a mantenimiento?", "Exit", dialog);
        if(result == 0) {
            connectionMySQL conn = new connectionMySQL();
            Connection con = (Connection) conn.connection();

            Random aleatorio = new Random(System.currentTimeMillis()); 
            int tecnicoSeleccionado = aleatorio.nextInt(cantidadTecnicos);
            String id_tecnicoSeleccionado = "";
            int idMantenimiento = 0;
            String depto = "";
            String marca = "";
            String modelo = "";
            String nombreDepartamento = "";


            PreparedStatement ps = null;
            PreparedStatement ps2 = null;
            PreparedStatement ps3 = null;
            PreparedStatement ps4 = null;
            PreparedStatement ps5 = null;
            ResultSet rs = null;
            ResultSet rs2 = null;
            ResultSet rs3 = null;
            ResultSet rs4 = null;
            ResultSet rs5 = null;
            PreparedStatement ps6 = null;
             ResultSet rs6 = null;
            
            try{
                String sql = "SELECT * from tecnico";
                String sql3 = "SELECT * FROM departamento WHERE nombre='" + departamento + "' ";
                ps3  = con.prepareStatement(sql3);
                rs3 = ps3.executeQuery();
                rs3.next();
                
                depto = rs3.getString("id");

                String sql2 = "INSERT INTO mantenimiento (depto_computadora, n_computadora) VALUES ('" + depto + "', '" + computadora + "')";
                ps = con.prepareStatement(sql);
                ps2 = con.prepareStatement(sql2);
       
                rs = ps.executeQuery();
                ps2.executeUpdate();
                
                int contador = 0;
                while(rs.next() && contador < tecnicoSeleccionado) {
                    contador++;
                }
                
                String sql5 = "SELECT * from mantenimiento WHERE n_computadora= '" + computadora + "'";
                ps5  = con.prepareStatement(sql5);
                rs5 = ps5.executeQuery();
                
                rs5.next();
                idMantenimiento = rs5.getInt("id");
                id_tecnicoSeleccionado = rs.getString("identificador"); //Se saca el técnico en la posición rs que se recorrió en el while anterior
                rs.first();
                
                PreparedStatement psEquipo = null;
                ResultSet rsEquipo = null;
                String sqlEquipo = "UPDATE computadora SET estado='bad' WHERE n_inventario='"+computadora+"'";
                psEquipo = con.prepareStatement(sqlEquipo);
                psEquipo.executeUpdate();
                
                 SecureRandom random = new SecureRandom();
                 String text = new BigInteger(20, random).toString(32);
                 String idReparacion = text;
                 Date date = new Date();
                 SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/YYYY");
                 
                 

                String fecha = formatoFecha.format(date);
                
                String sql4 = "INSERT INTO enreparacion (id_reparacion, id_tecnico, id_mantenimiento, fecha) VALUES ('" + idReparacion + "', '" + id_tecnicoSeleccionado +"', '" + idMantenimiento + "', STR_TO_DATE(REPLACE('"+ fecha +"','/','.') ,GET_FORMAT(date,'EUR')))";
                ps4 = con.prepareStatement(sql4);
                ps4.executeUpdate();
                
                String sql6 = "SELECT * FROM computadora WHERE n_inventario='" + computadora + "' ";
                ps6 = con.prepareStatement(sql6);
                rs6 = ps6.executeQuery();
                
                rs6.next();
                marca = rs6.getString("marca");
                modelo = rs6.getString("modelo");
                
        } catch (SQLException ex) {
            Logger.getLogger(Reporte.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_btnSiguienteMouseClicked

    private void cbxComputadorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxComputadorasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxComputadorasActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int fila = jtEquipoMant.getSelectedRow();
        DefaultTableModel tm = (DefaultTableModel) jtEquipoMant.getModel();

        if(fila >= 0) {
            try {
                String id_reporte =String.valueOf(tm.getValueAt(fila,2));
                PreparedStatement ps_reporte = connection.prepareStatement("SELECT * FROM enreparacion WHERE id_reparacion='"+id_reporte+"' ");
                System.out.println("1");
                ResultSet verifica_mantenimiento = ps_reporte.executeQuery();
                verifica_mantenimiento.first();
                System.out.println("2");
                int id_mantenimiento = verifica_mantenimiento.getInt("id_mantenimiento");
                System.out.println("3");
                String n_inventario = String.valueOf(tm.getValueAt(fila, 0));

                PreparedStatement pstR = connection.prepareStatement("DELETE FROM  enreparacion WHERE id_mantenimiento=" + id_mantenimiento);
                pstR.executeUpdate();
                System.out.println("4");
                PreparedStatement pstM = connection.prepareStatement("DELETE FROM  mantenimiento WHERE id=" + id_mantenimiento);
                pstM.executeUpdate();
                System.out.println("5");

                PreparedStatement psEquipo = null;
                ResultSet rsEquipo = null;
                String sqlEquipo = "UPDATE computadora SET estado='ok' WHERE n_inventario='"+n_inventario+"'";
                psEquipo = connection.prepareStatement(sqlEquipo);
                int a = psEquipo.executeUpdate();

                if (a > 0) {
                    JOptionPane.showMessageDialog(null, "El equipo ya no esta en mantenimiento");
                } else {
                    JOptionPane.showMessageDialog(null, "Error al eliminar de mantenimiento");
                }
                btnCargarActionPerformed(evt);
            } catch (SQLException ex) {
                System.out.println(ex.toString());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione equipo");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MantenimientoJefe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MantenimientoJefe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MantenimientoJefe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MantenimientoJefe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MantenimientoJefe(departamento, id_depto).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JComboBox<String> cbxComputadoras;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtEquipoMant;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}
